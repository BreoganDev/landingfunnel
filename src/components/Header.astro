---
import NavMobile from "@components/navigation/NavMobile.vue";
import ColorSwitch from "@components/common/ColorSwitch.vue";

import { t } from "@util/translate";

const { menu, title, social, color, cta } = Astro.props;
const currentPath = Astro.url.pathname.split("/")[1];

const isActive = (href) => {
  if (currentPath === "" && href == "/") return true;
  if (currentPath !== "" && href.startsWith(`/${currentPath}`)) return true;
};

// Mapeo de iconos a SVG simples
const getIconSVG = (iconName) => {
  const icons = {
    'menu-solid': `<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z"/></svg>`,
    'close': `<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>`,
    'twitter': `<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg>`,
    'facebook': `<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/></svg>`,
    'instagram': `<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987 6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.449 16.988c-1.297 0-2.448-.596-3.205-1.537l1.666-1.107c.329.498.907.838 1.539.838.414 0 .753-.126 1.02-.337.267-.211.4-.499.4-.864 0-.678-.508-1.229-1.134-1.229-.626 0-1.134.551-1.134 1.229h-1.8c0-1.677 1.361-3.038 3.038-3.038s3.038 1.361 3.038 3.038c0 .678-.195 1.299-.537 1.825-.342.526-.824.932-1.391 1.182zm7.424-1.537c-.757.941-1.908 1.537-3.205 1.537-.761 0-1.458-.206-2.067-.564l.926-1.448c.329.192.704.302 1.141.302.626 0 1.134-.551 1.134-1.229s-.508-1.229-1.134-1.229c-.437 0-.812.11-1.141.302l-.926-1.448c.609-.358 1.306-.564 2.067-.564 1.297 0 2.448.596 3.205 1.537l-1.666 1.107c-.329-.498-.907-.838-1.539-.838z"/></svg>`,
    'linkedin': `<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/></svg>`
  };
  return icons[iconName] || icons['menu-solid']; // fallback
};
---

<header
  class={`nav fixed inset-x-0 top-0 z-50 nav-${color}`}
  transition:name="nav"
>
  <nav
    class="container-xl nav__grid flex h-28 justify-between gap-6 transition-all duration-300"
  >
    <a
      href="/"
      aria-label={title}
      class="flex h-full items-center justify-start"
    >
      <img src="/logo.svg" alt="Rosa Delia Cabrera" class="h-6" />
    </a>

    {
      menu && (
        <div class="nav-underline nav-links relative hidden flex-nowrap items-center gap-4 pl-4 tracking-wide transition-colors  md:flex ">
          {menu.map((link) => (
            <a
              href={link.href}
              class={`${
                isActive(link.href) ? "active font-bold" : ""
              }  btn-replace`}
              data-replace={link.label}
            >
              <span> {link.label}</span>
            </a>
          ))}
        </div>
      )
    }

    <div
      class="nav-underline relative ml-auto flex flex-nowrap items-center justify-end gap-2 pl-4"
    >
      {
        cta && cta.length > 0 && (
          <div class="hidden sm:flex">
            {cta.map((link) => (
              <a
                href={link.href}
                class={`btn btn-sm btn-ghost `}
                data-replace={link.label}
              >
                <span> {link.label}</span>
              </a>
            ))}
          </div>
        )
      }

      <ColorSwitch client:load />

      <div class="md:hidden">
        <NavMobile
          {menu}
          active={currentPath}
          client:idle
          translations={{ menu: t("menu"), close: t("close") }}
        >
          <div slot="menu" class="h-10 w-10 flex items-center justify-center">
            <Fragment set:html={getIconSVG('menu-solid')} />
          </div>
          <div slot="close" class="h-10 w-10 flex items-center justify-center">
            <Fragment set:html={getIconSVG('close')} />
          </div>
          <img src="/logo.svg" alt="Rosa Delia Cabrera" class="w-full" slot="logo" />

          <div
            class="relatives flex w-full flex-wrap justify-center gap-2 py-4"
            slot="social"
          >
            {
              social.map((link, index) => (
                <a
                  href={link.href}
                  class="grid h-full place-items-center transition-all duration-300 hover:text-primary"
                  target="_blank"
                  aria-label={link.label}
                >
                  <div class="h-8 w-8 flex items-center justify-center">
                    <Fragment set:html={getIconSVG(link.icon)} />
                  </div>
                </a>
              ))
            }
          </div>
        </NavMobile>
      </div>
    </div>
  </nav>
  <style>
    .nav {
      /*  will-change: opacity, transform; */

      &__grid {
        @screen md {
          @apply grid;
          grid-template-columns: 1fr auto 1fr;
        }
      }
    }
    .btn-ghost {
      @apply border-2 border-current;
    }
  </style>
</header>